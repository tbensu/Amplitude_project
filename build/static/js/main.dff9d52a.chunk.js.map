{"version":3,"sources":["components/App.module.css","Views/About.module.css","components/SearchBar.module.css","components/Nav.module.css","Views/CityDetail.module.css","components/Cards.module.css","Views/Cities.module.css","Services/fetchCity.js","Services/fetchCoord.js","components/Temperature.js","components/Card.jsx","components/Cards.jsx","components/SearchBar.jsx","Views/Cities.js","Services/fetchID.js","Views/CityDetail.js","Views/About.js","components/Nav.js","App.js","serviceWorker.js","index.js","components/Card.module.css"],"names":["module","exports","apiKey","process","REACT_APP_APIKEY","Temperature","tag","temp","Card","props","max","min","name","img","onClose","primary","pressure","humidity","wind","idCiudad","className","a","hijdeyuta","tarjetaCiudad","botonCiudad","onClick","to","nombreCiudad","tempEspecial","Math","round","temperaturasCiudades","parametrosEsp","imagenCiudad","src","alt","Cards","cities","tarjetasCiudades","map","ciudad","id","SearchBar","onSearch","React","useState","search","setSearch","barraBusqueda","botonBusqueda","inputBusqueda","placeholder","autoComplete","value","onChange","e","target","Cities","data","handleOnClose","cartitas","length","timezone","filter","CityDetail","d","code","onBack","setCiudad","devuelveBien","unixtime","date","Date","hours","getHours","minutes","getMinutes","substr","useEffect","setData","fetch","then","r","json","recurso","undefined","main","temp_min","temp_max","feelslike","feels_like","weather","icon","weatherdesc","description","speed","winddegree","deg","clouds","all","latitud","coord","lat","longitud","lon","visibility","country","sys","sunrise","sunset","prevData","fetchID","botonDetail","tarjetaCiudadEsp","pais","paisito","paisito_pais","Intl","DisplayNames","type","of","peque","temperaturaaaas","temperaturasPro","tempEspeciale","centratelokita","riseset","centratelokitasun","pequetz","tz","negativo","devuelveTimeZone","riseset2","weatherCiudad","replace","w","c","toUpperCase","About","toito","titulo","link","href","active","fontWeight","Nav","navBar","navLink","activeStyle","exact","App","navigator","geolocation","getCurrentPosition","pos","oldCities","fetchCoord","coords","latitude","longitude","app","tituloAPP","bkg","container","path","strict","alert","fetchCity","render","match","history","parseInt","params","goBack","component","fechayhora","Boolean","window","location","hostname","ReactDOM","document","getElementById","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.dff9d52a.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"App_app__1tA9O\",\"bkg\":\"App_bkg__u92no\",\"tituloAPP\":\"App_tituloAPP__3hUJU\",\"container\":\"App_container__6j1zw\",\"fechayhora\":\"App_fechayhora__1Ion0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"titulo\":\"About_titulo__2LMZH\",\"link\":\"About_link__3j56P\",\"toito\":\"About_toito__1o4Og\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"barraBusqueda\":\"SearchBar_barraBusqueda__2xVtK\",\"inputBusqueda\":\"SearchBar_inputBusqueda__14XSv\",\"botonBusqueda\":\"SearchBar_botonBusqueda__3IcIC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"navBar\":\"Nav_navBar__3bzfp\",\"navLink\":\"Nav_navLink__RIdny\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"botonDetail\":\"CityDetail_botonDetail__2g-TL\",\"tarjetaCiudadEsp\":\"CityDetail_tarjetaCiudadEsp__3RL3S\",\"pais\":\"CityDetail_pais__2oZ0v\",\"paisito_pais\":\"CityDetail_paisito_pais__16Qv0\",\"paisito\":\"CityDetail_paisito__1DME7\",\"peque\":\"CityDetail_peque__1i9-F\",\"nombreCiudad\":\"CityDetail_nombreCiudad__2UXtb\",\"imagenCiudad\":\"CityDetail_imagenCiudad__2LsZi\",\"weatherCiudad\":\"CityDetail_weatherCiudad__3IoIg\",\"temperaturasCiudades\":\"CityDetail_temperaturasCiudades__QohAD\",\"tempEspecial\":\"CityDetail_tempEspecial__2qD3e\",\"tempEspeciale\":\"CityDetail_tempEspeciale__290Ch\",\"temperaturasPro\":\"CityDetail_temperaturasPro__X6nwg\",\"temperaturaaaas\":\"CityDetail_temperaturaaaas__1mArg\",\"parametrosEsp\":\"CityDetail_parametrosEsp__1K34c\",\"visibility\":\"CityDetail_visibility__3TpmO\",\"riseset\":\"CityDetail_riseset__Ci5KU\",\"riseset2\":\"CityDetail_riseset2__372be\",\"pequetz\":\"CityDetail_pequetz__1TNSL\",\"centratelokita\":\"CityDetail_centratelokita__3FdJ3\",\"centratelokitasun\":\"CityDetail_centratelokitasun__1d39y\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"tarjetasCiudades\":\"Cards_tarjetasCiudades__sN0Mu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"cartitas\":\"Cities_cartitas__1tXxo\"};","const apiKey = process.env.REACT_APP_APIKEY;\n\nexport default function fetchCity(ciudad, setData) {\n  fetch(`https://api.openweathermap.org/data/2.5/weather?q=${ciudad}&appid=${apiKey}&units=metric`)\n    .then((r) => r.json())\n    .then((recurso) => {\n      if (recurso.main !== undefined) {\n        const ciudad = {\n          min: Math.round(recurso.main.temp_min),\n          max: Math.round(recurso.main.temp_max),\n          img: recurso.weather[0].icon,\n          id: recurso.id,\n          wind: recurso.wind.speed,\n          temp: recurso.main.temp,\n          name: recurso.name,\n          weather: recurso.weather[0].main,\n          clouds: recurso.clouds.all,\n          latitud: recurso.coord.lat,\n          longitud: recurso.coord.lon,\n          pressure: recurso.main.pressure,\n          humidity: recurso.main.humidity,\n          timezone: recurso.timezone,\n        };\n        setData((oldCities) => [...oldCities, ciudad]);\n      } else {\n        alert(\"Ciudad no encontrada\");\n      }\n    });\n}\n","const apiKey = process.env.REACT_APP_APIKEY;\n\nexport default function fetchCoord(lat, lon, setData) {\n  fetch(`https://api.openweathermap.org/data/2.5/weather?lat=${lat}&lon=${lon}&appid=${apiKey}&units=metric`)\n    .then((r) => r.json())\n    .then((recurso) => {\n      if (recurso.main !== undefined) {\n        const ciudad = {\n          min: Math.round(recurso.main.temp_min),\n          max: Math.round(recurso.main.temp_max),\n          img: recurso.weather[0].icon,\n          id: recurso.id,\n          wind: recurso.wind.speed,\n          temp: recurso.main.temp,\n          name: recurso.name,\n          weather: recurso.weather[0].main,\n          clouds: recurso.clouds.all,\n          latitud: recurso.coord.lat,\n          longitud: recurso.coord.lon,\n          pressure: recurso.main.pressure,\n          humidity: recurso.main.humidity,\n          timezone: recurso.timezone,\n        };\n        setData((oldCities) => [...oldCities, ciudad]);\n      } else {\n        setData((prevData) => {\n          return prevData;\n        });\n      }\n    });\n}\n","import React from 'react'\n\nfunction Temperature({tag, temp}) {\n    return (\n        <div>\n        <span>{tag}\n        <br/>\n        {temp}°C</span>\n      </div>\n    );   \n  };\n  \nexport default Temperature;\n\n","import React from \"react\";\nimport Temperature from \"./Temperature.js\";\nimport a from \"./Card.module.css\";\nimport { Link } from \"react-router-dom\";\n\nexport default function Card(props) {\n  const {\n    max,\n    min,\n    name,\n    img,\n    onClose,\n    primary,\n    temp,\n    pressure,\n    humidity,\n    wind,\n    idCiudad,\n  } = props;\n\n  return (\n    <div className={`${primary ? a.primary : \"\"}`}>\n      <div className={primary && `${a.hijdeyuta}`}>\n        <span className={!primary ? `${a.tarjetaCiudad}` : ''}>\n          {\n            <button className={a.botonCiudad} onClick={onClose}>\n              X\n            </button>\n          }\n          <Link to={`/city/${idCiudad}`}>\n            <p className={a.nombreCiudad}>{name} </p>\n          </Link>\n          <div className={a.tempEspecial}>\n            {primary && <Temperature tag=\"Temperature:\" temp={Math.round(temp*10)/10}/>}\n          </div>\n          <div className={a.temperaturasCiudades}>\n            <Temperature tag=\"Min:\" temp={min} />\n            <Temperature tag=\"Max:\" temp={max} />\n          </div>\n          <div className={a.parametrosEsp}>\n            <p>\n              {\" \"}\n              Pressure: <br /> {pressure} hPa{\" \"}\n            </p>\n            <p>\n              {\" \"}\n              Wind: <br /> {wind} m/s{\" \"}\n            </p>\n            <p>\n              {\" \"}\n              Humidity: <br /> {humidity} %{\" \"}\n            </p>\n          </div>\n          <img\n            className={!primary ? `${a.imagenCiudad}` : ''}\n            src={`http://openweathermap.org/img/wn/${img}@2x.png`}\n            alt=\"'Weather Icon'\"\n          />\n        </span>\n      </div>\n    </div>\n  );\n}\n","import React from 'react';\nimport Card from './Card.jsx';\nimport a from './Cards.module.css';\n\n\nexport default function Cards({cities, onClose}) {\n\n  return ( \n  <div className={a.tarjetasCiudades}>\n    {cities.map((ciudad) => (\n      <Card \n      key={ciudad.id} \n      idCiudad={ciudad.id}\n      name={ciudad.name}\n      min={ciudad.min}\n      max={ciudad.max}\n      img={ciudad.img}\n      onClose={() => onClose(ciudad.id)}\n      />\n    ))}\n  </div>\n  );\n};","import React from 'react';\nimport a from './SearchBar.module.css';\n\n\n\nexport default function SearchBar({onSearch}) {\n  \n  const [search, setSearch] = React.useState('');\n\n  const handleOnSearch = () => {\n    onSearch(search);\n    setSearch('');\n}\n\n  return <div className={a.barraBusqueda}>\n    <button className={a.botonBusqueda} onClick={handleOnSearch}> + </button>\n    <input \n    className={a.inputBusqueda} \n    id='searchInput' \n    placeholder=\"Search City\" \n    autoComplete=\"off\" \n    value={search}\n    onChange={(e) => setSearch(e.target.value)}\n    />\n  </div>\n};","import React from 'react'\nimport Cards from '../components/Cards.jsx';\nimport SearchBar from '../components/SearchBar.jsx';\nimport Card from '../components/Card.jsx';\nimport a from '../Views/Cities.module.css';\n\nfunction Cities({data, onSearch, handleOnClose}) {\n    return (\n        <>\n        <div>\n          <SearchBar\n            onSearch={onSearch}/>\n        </div>\n          <div className={a.cartitas}>\n            <div>\n                {(data.length > 0) && <Card \n                  primary\n                  temp={data[0].temp}\n                  max={data[0].max}\n                  min={data[0].min}\n                  name={data[0].name}\n                  img={data[0].img}\n                  wind={data[0].wind}\n                  idCiudad={data[0].id}\n                  pressure={data[0].pressure}\n                  humidity={data[0].humidity}\n                  timezone={data[0].timezone}\n                  onClose={() => handleOnClose(data[0].id)}\n                />}\n              </div>\n              <div>\n            {<Cards cities={data.filter(ciudad => ciudad.name !== data[0].name)} onClose={handleOnClose}/>}\n          </div>\n        </div>\n        </>\n    )\n}\n\nexport default Cities\n","const apiKey = process.env.REACT_APP_APIKEY;\n\nexport default function fetchID(id, setData) {\n  fetch(`https://api.openweathermap.org/data/2.5/weather?id=${id}&appid=${apiKey}&units=metric`)\n    .then((r) => r.json())\n    .then((recurso) => {\n      if (recurso.main !== undefined) {\n        \n        const ciudad = {\n          min: Math.round(recurso.main.temp_min),\n          max: Math.round(recurso.main.temp_max),\n          pressure: recurso.main.pressure,\n          humidity: recurso.main.humidity,\n          temp: recurso.main.temp,\n          feelslike: recurso.main.feels_like,\n          img: recurso.weather[0].icon,\n          weather: recurso.weather[0].main,\n          weatherdesc: recurso.weather[0].description,\n          id: recurso.id,\n          wind: recurso.wind.speed,\n          winddegree: recurso.wind.deg,\n          name: recurso.name,\n          clouds: recurso.clouds.all,\n          latitud: recurso.coord.lat,\n          longitud: recurso.coord.lon,\n          visibility: recurso.visibility,\n          timezone: recurso.timezone,\n          country: recurso.sys.country,\n          sunrise: recurso.sys.sunrise,\n          sunset: recurso.sys.sunset,\n        };\n        setData(ciudad);\n      } else {\n        setData((prevData) => {\n          return prevData;\n        });\n      }\n    });\n}\n","import React from \"react\";\nimport fetchID from \"../Services/fetchID\";\nimport a from \"../Views/CityDetail.module.css\";\nimport Temperature from \"../components/Temperature\";\n// import fetchCoord from \"../Services/fetchCoord\"\n\nfunction CityDetail({ id, onBack }) {\n  // const [data, setData] = React.useState([]);\n  const [ciudad, setCiudad] = React.useState();\n\n  React.useEffect(() => {\n    // if (navigator.geolocation) {\n    //   navigator.geolocation.getCurrentPosition((pos) => {\n    //     fetchCoord(pos.coords.latitude, pos.coords.longitude, setData);\n    //   });\n    // }\n    fetchID(id, setCiudad);\n  }, [id, setCiudad]);\n\n  function dameElNombreLisa(code) {\n    let regionNames = new Intl.DisplayNames([\"en\"], { type: \"region\" });\n    return regionNames.of(code);\n  }\n\n  // function convertTZ (ctz, ltz) {\n  //   if(ctz === undefined) return false;\n  //   else if (ctz === ltz) return 0;\n  //   else return Math.abs((ctz - ltz));\n  // }\n\n  function devuelveBien(unixtime) {\n    let date = new Date(unixtime * 1000);\n    let hours = date.getHours();\n    let minutes = \"0\" + date.getMinutes();\n    hours = hours < 10 ? \"0\" + hours : hours;\n    minutes = minutes < 10 ? \"0\" + minutes : minutes;\n    let formattedTime = hours + \":\" + minutes.substr(-2);\n    return formattedTime;\n  }\n\n  function devuelveTimeZone(tz) {\n    let timezone = tz / 3600;\n    let negativo = false;\n    if (timezone < 0) {\n      negativo = true;\n    }\n    if (negativo === false) {\n      if (timezone < 10 && timezone >= 0) {\n        timezone = \"+0\" + timezone;\n      }\n    } else {\n      timezone = -timezone;\n      if (timezone < 10 && timezone >= 0) {\n        timezone = \"-0\" + timezone;\n      }\n    }\n    return timezone + \":00\";\n  }\n\n  function orientacionViento(d) {\n    if ((d >= 0 && d < 22.5) || (d >= 337.5 && d < 360)) return \"North\";\n    else if (d >= 22.5 && d < 67.5) return \"(North-East)\";\n    else if (d >= 67.5 && d < 112.5) return \"(East)\";\n    else if (d >= 112.5 && d < 157.5) return \"(South-East)\";\n    else if (d >= 157.5 && d < 202.5) return \"(South)\";\n    else if (d >= 202.5 && d < 247.5) return \"(South-West)\";\n    else if (d >= 247.5 && d < 292.5) return \"(West)\";\n    else if (d >= 292.5 && d < 337.5) return \"(North-West)\";\n  }\n\n  return (\n    <>\n      <button onClick={onBack} className={a.botonDetail}>\n        Go Back\n      </button>\n      <div className={a.tarjetaCiudadEsp}>\n        {ciudad === undefined && <h2>Loading...</h2>}\n        {ciudad === null && <h2>City not found</h2>}\n        {ciudad && (\n          <>\n            <div className={a.nombreCiudad}>{ciudad.name}</div>\n            <span className={a.pais}>\n              <span className={a.paisito}>\n                <div className={a.paisito_pais}>\n                  Country: {dameElNombreLisa(ciudad.country)}\n                </div>\n                <div>Country Code: {ciudad.country}</div>\n              </span>\n\n              <span className={a.peque}>\n                <div>Latitude: {ciudad.latitud}</div>\n                <div>Longitude: {ciudad.longitud}</div>\n              </span>\n            </span>\n            <div className={a.temperaturaaaas}>\n              <span className={a.temperaturasPro}>\n                <div className={a.tempEspecial}>\n                  <Temperature\n                    tag=\"Temperature:\"\n                    temp={Math.round(ciudad.temp * 10) / 10}\n                  />\n                </div>\n                <div className={a.tempEspeciale}>\n                  <Temperature\n                    tag=\"Feels Like:\"\n                    temp={Math.round(ciudad.feelslike * 10) / 10}\n                  />\n                </div>\n              </span>\n              <span className={a.temperaturasPro}>\n                <div className={a.temperaturasCiudades}>\n                  <Temperature tag=\"Min:\" temp={ciudad.min} />\n                  <Temperature tag=\"Max:\" temp={ciudad.max} />\n                </div>\n              </span>\n            </div>\n            <span className={a.parametrosEsp}>\n              <div>Pressure: {ciudad.pressure} hPa</div>\n              <div>Humidity: {ciudad.humidity} %</div>\n              <div>Wind: {ciudad.wind} m/s</div>\n              <span className={a.centratelokita}>\n                <div>Degree: {ciudad.winddegree} °</div>\n                <div>{orientacionViento(ciudad.winddegree)}</div>\n              </span>\n            </span>\n            <div className={a.riseset}>\n              <span className={a.centratelokitasun}>\n                <span className={a.centratelokita}>\n                  <div>Sunrise (LTZ): </div>\n                  {/* <div>{console.log(ctz)}</div> */}\n                  {/* <div>{devuelveBien(ciudad.sunrise+convertTZ(data[0].timezone,ciudad.timezone))}</div> */}\n                </span>\n                <span className={a.centratelokita}>\n                  <div>Sunset (LTZ): </div>\n                  {/* <div>{devuelveBien(ciudad.sunset+convertTZ(data[0].timezone,ciudad.timezone))}</div> */}\n                </span>\n              </span>\n            </div>\n            <span className={a.pequetz}>\n              <div>Time Zone: </div>\n              <div>{devuelveTimeZone(ciudad.timezone)}</div>\n            </span>\n            <div className={a.riseset2}>\n              <span className={a.centratelokitasun}>\n                <span className={a.centratelokita}>\n                  <div>Sunrise (CTZ): </div>\n                  <div>{devuelveBien(ciudad.sunrise)}</div>\n                </span>\n                <span className={a.centratelokita}>\n                  <div>Sunset (CTZ): </div>\n                  <div>{devuelveBien(ciudad.sunset)}</div>\n                </span>\n              </span>\n            </div>\n            <div>\n              <img\n                className={a.imagenCiudad}\n                src={`http://openweathermap.org/img/wn/${ciudad.img}@2x.png`}\n                alt=\"'Weather Icon'\"\n              />\n              <div className={a.weatherCiudad}>\n                <div>{ciudad.weather}</div>\n                <div>\n                  {\" (\"}\n                  {ciudad.weatherdesc.replace(/\\w\\S*/g, (w) =>\n                    w.replace(/^\\w/, (c) => c.toUpperCase())\n                  )}\n                  {\")\"}\n                </div>\n                <div>Clouds: {ciudad.clouds} %</div>\n              </div>\n              <div className={a.visibility}>\n                Visibility: {ciudad.visibility} m\n              </div>\n            </div>\n          </>\n        )}\n      </div>\n    </>\n  );\n}\n\nexport default CityDetail;\n","import React from \"react\";\nimport a from \"./About.module.css\";\n\nfunction About() {\n  return (\n    <div className={a.toito}>\n      <p className={a.titulo}>\n        This App was developed as a Personal Project for the Full-Stack\n        Development Bootcamp by \"SoyHenry\".\n      </p>\n      <p className={a.titulo}>\n        The idea was to fetch data from the weather API and display it in a\n        React App.\n      </p>\n      <p className={a.titulo}>\n        GitHub Repo:{\" \"}\n        <a className={a.link} href=\"https://github.com/Yooololo/WeatherApp\">\n          {\" \"}\n          &nbsp; https://github.com/Yooololo/WeatherApp\n        </a>\n      </p>\n    </div>\n  );\n}\n\nexport default About;\n","import React from 'react';\nimport {NavLink} from 'react-router-dom';\nimport a from '../components/Nav.module.css';\n\nconst active = {\n  fontWeight: 700,\n};\n\nfunction Nav() {\n  return (\n    <nav className={a.navBar}>\n        <NavLink className={a.navLink} activeStyle={active} to='/' exact>Home</NavLink>\n        <NavLink className={a.navLink} activeStyle={active} to='/about' exact>About</NavLink>\n    </nav>\n  );\n};\n\nexport default Nav;\n","import React from \"react\";\nimport \"./normalize.css\";\nimport \"./index.css\";\nimport a from \"./components/App.module.css\";\nimport fetchCity from \"./Services/fetchCity\";\nimport fetchCoord from \"./Services/fetchCoord\";\nimport { Route } from \"react-router-dom\";\nimport Cities from \"./Views/Cities\";\nimport CityDetail from \"./Views/CityDetail\";\nimport About from \"./Views/About\";\nimport Nav from \"./components/Nav.js\";\n\nfunction App() {\n  const [data, setData] = React.useState([]);\n\n  function onSearch(ciudad) {\n    if (data.length > 6) {\n      alert(\"Máximo de Ciudades Alcanzado\");\n    } else {\n      fetchCity(ciudad, setData);\n    }\n  }\n\n  function handleOnClose(id) {\n    setData((prevData) => {\n      return prevData.filter((ciudad) => ciudad.id !== id);\n    });\n  }\n  \n  React.useEffect(() => {\n    if (navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition((pos) => {\n        fetchCoord(pos.coords.latitude, pos.coords.longitude, setData);\n      });\n    }\n  }, []);\n\n  return (\n    <div className={a.app}>\n      <span className={a.tituloAPP}>Tori Weather</span>\n      <div className={a.bkg} />\n      <div className={a.container}>\n        <Route path=\"/\" exact strict>\n          <Cities\n            data={data}\n            handleOnClose={handleOnClose}\n            onSearch={onSearch}\n          />\n        </Route>\n        <Route path=\"/about\" exact strict>\n          <About />\n        </Route>\n        <Route\n          path=\"/city/:id\"\n          exact\n          render={({ match, history }) => {\n            const id = parseInt(match.params.id);\n            return (\n              <CityDetail id={id} onBack={history.goBack} />\n            );\n          }}\n        />\n      </div>\n      <Route path=\"/\" component={Nav} />\n      <span className={a.fechayhora} id=\"ct\"></span>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport './normalize.css';\nimport {BrowserRouter} from 'react-router-dom'\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"primary\":\"Card_primary__7S6Mh\",\"nombreCiudad\":\"Card_nombreCiudad__15s2H\",\"temperaturasCiudades\":\"Card_temperaturasCiudades__kG_eN\",\"hijdeyuta\":\"Card_hijdeyuta__r4Hd4\",\"tempEspecial\":\"Card_tempEspecial__Uk8MT\",\"parametrosEsp\":\"Card_parametrosEsp__3ijZW\",\"tarjetaCiudad\":\"Card_tarjetaCiudad__38iH9\",\"botonCiudad\":\"Card_botonCiudad__2gtmA\",\"imagenCiudad\":\"Card_imagenCiudad__rErkW\"};"],"sourceRoot":""}